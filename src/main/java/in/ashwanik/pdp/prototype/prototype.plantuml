@startuml

title __PROTOTYPE's Class Diagram__\n

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.Armoury {
        {static} - armoury : Armoury
        {static} - random : Random
        - weapons : List<Weapon>
        {static} + fill()
        {static} + getRandomWeapon()
        {static} + getWeapons()
        + numberOfWeapons()
        - Armoury()
        {static} - get()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.Character {
        - description : String
        - health : int
        - name : String
        - weapons : List<Weapon>
        + Character()
        + attack()
        + changeHealth()
        + getDescription()
        + getHealth()
        + getName()
        + getWeapons()
        + hasWeapon()
        + isDead()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.CollectibleItem {
        - weight : int
        + CollectibleItem()
        + getWeight()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.Dagger {
        + Dagger()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.DarkElf {
        {static} + DARK_ELF : String
        + DarkElf()
        + DarkElf()
        + newInstance()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    abstract class in.ashwanik.pdp.prototype.Enemy {
        - experience : int
        + Enemy()
        + Enemy()
        + changeHealth()
        + getExperience()
        {abstract} + newInstance()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.EnemyFactory {
        - enemies : Map<String, Enemy>
        {static} - enemyTypes : String[]
        {static} - instance : EnemyFactory
        - random : Random
        {static} + getRandomEnemy()
        {static} + init()
        - EnemyFactory()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.Game {
        - characters : List<Character>
        + Game()
        + getCharacters()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.Item {
        - description : String
        - name : String
        + Item()
        + getDescription()
        + getName()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.LongSword {
        + LongSword()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.Mace {
        + Mace()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.Orc {
        {static} + ORC : String
        + Orc()
        + Orc()
        + newInstance()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.SpikeHammer {
        + SpikeHammer()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.Uruk {
        {static} + URUK : String
        + Uruk()
        + Uruk()
        + newInstance()
    }
  }
  

  namespace in.ashwanik.pdp.prototype {
    class in.ashwanik.pdp.prototype.Weapon {
        - maximumDamage : int
        - minimumDamage : int
        + Weapon()
        + getMaximumDamage()
        + getMinimumDamage()
        + toString()
    }
  }
  

  in.ashwanik.pdp.prototype.CollectibleItem -up-|> in.ashwanik.pdp.prototype.Item
  in.ashwanik.pdp.prototype.Dagger -up-|> in.ashwanik.pdp.prototype.Weapon
  in.ashwanik.pdp.prototype.DarkElf -up-|> in.ashwanik.pdp.prototype.Enemy
  in.ashwanik.pdp.prototype.Enemy -up-|> in.ashwanik.pdp.prototype.Character
  in.ashwanik.pdp.prototype.LongSword -up-|> in.ashwanik.pdp.prototype.Weapon
  in.ashwanik.pdp.prototype.Mace -up-|> in.ashwanik.pdp.prototype.Weapon
  in.ashwanik.pdp.prototype.Orc -up-|> in.ashwanik.pdp.prototype.Enemy
  in.ashwanik.pdp.prototype.SpikeHammer -up-|> in.ashwanik.pdp.prototype.Weapon
  in.ashwanik.pdp.prototype.Uruk -up-|> in.ashwanik.pdp.prototype.Enemy
  in.ashwanik.pdp.prototype.Weapon -up-|> in.ashwanik.pdp.prototype.CollectibleItem


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
